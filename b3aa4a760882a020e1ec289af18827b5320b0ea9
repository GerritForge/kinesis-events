{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "51c2af04_ec81028e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/kinesis/CheckpointResetter.java",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1005270
      },
      "writtenOn": "2021-03-31T07:25:16Z",
      "side": 1,
      "message": "should this be configurable?",
      "range": {
        "startLine": 44,
        "startChar": 31,
        "endLine": 44,
        "endChar": 65
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9553c3a_ae3a8fc3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/kinesis/CheckpointResetter.java",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2021-03-31T07:53:14Z",
      "side": 1,
      "message": "I thought about it, but then I figured it should be enough just to have a reasonable value used internally.\nKinesis cannot be run on prems and any connection to public AWS should always resolve within this timeframe, so I thought it is unlikely that one will ever need to tweak this value.\n\nWDYT?",
      "parentUuid": "51c2af04_ec81028e",
      "range": {
        "startLine": 44,
        "startChar": 31,
        "endLine": 44,
        "endChar": 65
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7f86ded_f044b33c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/kinesis/CheckpointResetter.java",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1005270
      },
      "writtenOn": "2021-03-31T07:25:16Z",
      "side": 1,
      "message": "why this is just warning?",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 24
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1871d95b_ac18e344",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/kinesis/CheckpointResetter.java",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2021-03-31T07:53:14Z",
      "side": 1,
      "message": "InterruptedException might happen when gerrit is shutdown (or the plugin unloaded), it is expected and not an error per se.",
      "parentUuid": "a7f86ded_f044b33c",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 24
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bd93d81_96efda92",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/kinesis/KinesisConsumer.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1005270
      },
      "writtenOn": "2021-03-31T07:25:16Z",
      "side": 1,
      "message": "I think I got lost, just to clarify. We set resetOffset to true so after restart of the receiver we will read from the beginning. But in replayAll I don\u0027t see any code to reconnect the receiver. Is this variable still needed is we use checkpointResetter?",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 25
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bd97f64_1a1de327",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/kinesis/KinesisConsumer.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2021-03-31T07:53:14Z",
      "side": 1,
      "message": "There could be two scenarios:\n- The consumer was started for the first time (no lease table was created before).\n- The consumer was already running in the past (a lease table already exists).\n\n1 - \nthe \u0027resetOffset\u0027 variable overrides whatever \u0027initialPosition\u0027 value was configured to TRIM_HORIZON. This applies when there is no lease table for the consumer yet (i.e. the dynamodb table).\n\nSo this means: if you had no checkpoint yet, you should start consuming from the beginning of the stream, regardless of what has been configured.\n\nThis is needed because the default initialPosition is \"latest\", so if your broker was connecting for the fist time (he had no previous checkpoints) and some message was produced by another node before a new dynamodb table is created, it would NOT be consumed, unless we set the initialPosition to trim_horizon.\n\n2 -\nThe checkpoint resetter overrides the checkpoint (which is stored in dynamodb) to TRIM_HORIZON (i.e. beginning of the stream).\n\nSo this means: if you had a checkpoint, rewind it to the beginning of the stream.\n\nThis is needed because the consumer coordinator will always start from the checkpoint stored in dynamodb, when one exists, so that needs to be rewinded back to TRIM_HORIZON to tell the coordinator to start from there.\n\nHope it makes sense.\n\nDo you think it\u0027s worth adding some comment?",
      "parentUuid": "5bd93d81_96efda92",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 25
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b8392ce_a3527c49",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/kinesis/KinesisConsumer.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1005270
      },
      "writtenOn": "2021-03-31T09:52:03Z",
      "side": 1,
      "message": "Ok that\u0027s clear for me. So resetOffset is just for new consumer to make sure that if someone call resetOffset before receiveAsnyc it will still start from the beginning. Yes, we definitely need a comment for that",
      "parentUuid": "1bd97f64_1a1de327",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 25
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d94c2aa8_73a6d873",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/kinesis/KinesisEventsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1005270
      },
      "writtenOn": "2021-03-31T07:25:16Z",
      "side": 1,
      "message": "same as below, as a follow up change could we check the message content?",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 80
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bc4d133_fb24d573",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/kinesis/KinesisEventsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2021-03-31T07:53:14Z",
      "side": 1,
      "message": "yep let me do that",
      "parentUuid": "d94c2aa8_73a6d873",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 80
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45a23254_1f0c17a3",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/kinesis/KinesisEventsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1005270
      },
      "writtenOn": "2021-03-31T07:25:16Z",
      "side": 1,
      "message": "should we also check what kind of messages we consumed?",
      "range": {
        "startLine": 121,
        "startChar": 4,
        "endLine": 121,
        "endChar": 81
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc283c43_706f21b4",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/kinesis/KinesisEventsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1005270
      },
      "writtenOn": "2021-03-31T07:25:16Z",
      "side": 1,
      "message": "why two? replay should deliver just one message. Could we reset the counter to make sure that only one message is delivered?",
      "range": {
        "startLine": 121,
        "startChar": 29,
        "endLine": 121,
        "endChar": 57
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a316eeca_92bfc62e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/kinesis/KinesisEventsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2021-03-31T07:53:14Z",
      "side": 1,
      "message": "We are already sure only one messasge is delivered right? it goes from 1 to 2.",
      "parentUuid": "bc283c43_706f21b4",
      "range": {
        "startLine": 121,
        "startChar": 29,
        "endLine": 121,
        "endChar": 57
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f6f72a2_bd1041a1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/kinesis/KinesisEventsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2021-03-31T07:53:14Z",
      "side": 1,
      "message": "sure",
      "parentUuid": "45a23254_1f0c17a3",
      "range": {
        "startLine": 121,
        "startChar": 4,
        "endLine": 121,
        "endChar": 81
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "607cefaf_3ac2178d",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/kinesis/KinesisEventsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1005270
      },
      "writtenOn": "2021-03-31T09:56:23Z",
      "side": 1,
      "message": "well, is not that obvious because you are creating new receiver so I would expect that you have new consumerMessages instance. Plus if you want to check the message content you already have two so which one is the correct one to check. Logic is getting unnecessary blur",
      "parentUuid": "a316eeca_92bfc62e",
      "range": {
        "startLine": 121,
        "startChar": 29,
        "endLine": 121,
        "endChar": 57
      },
      "revId": "b3aa4a760882a020e1ec289af18827b5320b0ea9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}